#!/bin/bash

# I only support "-o" as the first argument
if [[ "$1" != "-o" ]]
then
	echo "menugen -o <output> <input file>..."
	exit 1
fi
OUTPUT_FILE="$2"
shift
shift
rm -f $OUTPUT_FILE
touch $OUTPUT_FILE

# I only support "-p" as the second argument
if [[ "$1" != "-p" ]]
then
	echo "menugen -o <output> -p <prefix> <input file>..."
	exit 1
fi
PREFIX="$2"
shift
shift

# Collect the top-level menu entries
grep -l "^MENU:" $@ | while read markdown
do
    html="$(echo "$markdown" | sed 's@pages/\(.*\).md@\1.html@')"
    menu="$(grep "^MENU:" "$markdown" | cut -d: -f2)"
    id="$(echo "$markdown" | sed 's@pages/\(.*\).md@\1@')"

    dropdown=""
    if [[ "$(grep -l "^INMENU:$menu" $@ | wc -l | bc)" != "0" ]]
    then
        dropdown=" â–¾"
    fi

    cat >>$OUTPUT_FILE <<EOF
document.write('<!-- data-toggle="dropdown" -->')
document.write('<li class="dropdown" id="$id">')
document.write('  <a href="$PREFIX/$html">$menu$dropdown</a>')
EOF

    if [[ "$(grep -l "^INMENU:$menu" $@ | wc -l | bc)" != "0" ]]
    then
        cat >>$OUTPUT_FILE <<EOF
document.write('  <ul class="dropdown-menu" role="menu">')
EOF
    fi

    grep -l "^INMENU:$menu" $@ | while read smarkdown
    do
        shtml="$(echo "$smarkdown" | sed 's@pages/\(.*\).md@\1.html@')"
        smenu="$(grep "^SUBMENU:" "$smarkdown" | cut -d: -f2)"
        sid="$(echo "$smarkdown" | sed 's@pages/\(.*\).md@\1@')"
        prefix="$(echo "$PREFIX" | sed 's@.*/@../@g')"

	cat >>$OUTPUT_FILE <<EOF
document.write('    <li><a href="$prefix/$shtml">$smenu</a></li>')
EOF
    done

    if [[ "$(grep -l "^INMENU:$menu" $@ | wc -l | bc)" != "0" ]]
    then
        cat >>$OUTPUT_FILE <<EOF
document.write('  </ul>')
EOF
    fi

    cat >>$OUTPUT_FILE <<EOF
document.write('</li>')
EOF
done
